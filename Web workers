// apiWorker.js
import axios from 'axios';

self.onmessage = async (event) => {
  const { url, payload } = event.data;

  try {
    const response = await axios.post(url, payload);
    self.postMessage({ status: 'success', data: response.data });
  } catch (error) {
    self.postMessage({ status: 'error', error: error.message });
  }
};

import React, { useEffect, useState } from 'react';
import Worker from 'web-worker';

function App() {
  const [result, setResult] = useState(null);

  useEffect(() => {
    const worker = new Worker(new URL('./apiWorker.js', import.meta.url));

    worker.postMessage({
      url: 'https://jsonplaceholder.typicode.com/posts',
      payload: {
        title: 'foo',
        body: 'bar',
        userId: 1,
      },
    });

    worker.onmessage = (event) => {
      if (event.data.status === 'success') {
        setResult(event.data.data);
      } else {
        console.error('Worker error:', event.data.error);
      }
    };

    return () => worker.terminate();
  }, []);

  return (
    <div>
      <h1>Web Worker API Result</h1>
      <pre>{JSON.stringify(result, null, 2)}</pre>
    </div>
  );
}

export default App;
